@model Model.EF.khachhang

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
}

<h2>Thêm Khách Hàng</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nhập thông tin người dùng</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaKH, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.MaKH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaKH, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Ho, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Ho, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ho, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ten, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Ten, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ten, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SDT, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDKH, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.IDKH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IDKH, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
